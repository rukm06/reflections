How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    diff command is quite efficient to find the diffrence between two files. By using diff, I could find what I modified last time. It helps to find bugs and typos quickly.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

	Having easy access to entire history of a file allows me not to save revised file manually and routinely. If anything went wrong, I can check out a previous version and check the difference immediately. 

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

	Git pros: Keep flexibility for programming. Programmers can choose reasonable time to commit after a clear logic added/modified without compiling error. 
	Git cons: Probably commit too big or too small change by manually. It's judged by every single user.
	Google doc pros: Saved document automatically reduces human work and lets authors trace history files easily. 
	Google doc cons: Fixed time or condition to saved history files might cause some problems for specific purpose. For programmers, automatic saving would make modifications hard to read or compiling error due to lack clear logic.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because version control systems are designed for programming purpose. When programmers make a logical change among mulitple files, the control system shall be able to trace all modified files in one commit. Although sometimes programmers could only make a modification on one file, allowing saving multiple files in one commit offers flexibility for all possible cases. On the other hand, others, like Google Docs, take emphasis on each file instead of whole logical changes.

How can you use the commands git log and git diff to view the history of files?

    By using git log, I can check the history information of commits(ex. ID, comment...etc.), and using git diff can let me check all the difference between two history commits.

How might using version control make you more confident to make changes that
could break something?

    By using version control, I can checkout any previous commit if bugs were introduced. That makes me confident to make changes among whole repository even I might break something.

Now that you have your workspace set up, what do you want to try using Git for?

    I'd like to create a new repository and try to make a new commit to check if everything goes well.
